-- MySQL Script generated by MySQL Workbench
-- Sat Jul 22 16:33:41 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema dbo
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema dbo
-- -----------------------------------------------------


DROP TABLE IF EXISTS `dbo`.`Field`;
-- -----------------------------------------------------
-- Table `dbo`.`Field`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbo`.`Field` (
  `idField` INT NOT NULL AUTO_INCREMENT,
  `category` VARCHAR(64) NOT NULL,
  `atribute` VARCHAR(64) NOT NULL,
  `weight` DECIMAL(10,4) NOT NULL DEFAULT 0.0000,
  `html_id` VARCHAR(64) NULL,
  `html_name` VARCHAR(64) NULL,
  `html_row_count` INT NULL DEFAULT 1,
  `html_label` VARCHAR(64) NULL,
  `html_placeholder` VARCHAR(64) NULL,
  `html_info` VARCHAR(128) NULL,
  `html_code` VARCHAR(2048) NULL,
  PRIMARY KEY (`idField`),
  UNIQUE INDEX `idField_UNIQUE` (`idField` ASC)
  )
ENGINE = InnoDB;

USE `dbo` ;

-- -----------------------------------------------------
-- Placeholder table for view `dbo`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbo`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `dbo`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbo`.`view1`;
USE `dbo`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- Field
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('1', 'Study identification', 'Title', '0.00', 'title', 'title', '1', 'Title', 'Please enter with Title', 'The Title of the project published');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('2', 'Study identification', 'Year', '0.00', 'year', 'year', '', 'Year', '', 'Year that the article was published');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('3', 'Study identification', 'Bibliografic Reference (BibTex)', '0.00', 'bibtex', 'bibtex', '3', 'Bibliografic reference (Bibtex)', 'Please enter with Bibliografic reference (Bibtex)', '');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('4', 'Study identification', 'Link (URL)', '0.00', 'link', 'link', '1', 'Link (URL)', 'Please enter with Link (URL)', 'Link to the article');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('5', 'Programming model', 'Execution platformm ', '0.0680', 'executionPlatform', 'executionPlatform', '1', 'Execution platform', 'Please enter with Execution platformm ', 'Execution platform that the software under test executes');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('6', 'Programming model', 'Objective', '0.00', 'objective', 'objective', '1', 'Context/Objective', 'Please enter with Context/Objective', 'Context/objective of the concurrent software');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('7', 'Programming model', 'Programming language ', '0.0573', 'programmingLanguage', 'programmingLanguage', '1', 'Programming Language/Runtime libraries', 'Please enter with Programming language ', 'Programming language and/or runtime libraries that the software under testing was developed');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('8', 'General testing characteristics', 'Testing technique ', '0.0738', 'testingTechnique', 'testingTechnique', '1', 'Testing technique ', 'Please enter with Testing Technique', 'Type of testing technique proposed');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('9', 'General testing characteristics', 'Test data generation', '0.00', 'testDataGeneration', 'testDataGeneration', '1', 'Test data generation', 'Please enter with Test data generation', 'Synchronization interleaving mechanism');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('10', 'General testing characteristics', 'Testing level', '0.0689', 'testingLevel', 'testingLevel', '1', 'Testing level', 'Please enter with Testing level', 'Testing level that the technique was applied');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('11', 'General testing characteristics', 'Synchronization mechanism', '0.0689', 'synchronizationMechanism', 'synchronizationMechanism', '1', 'Synchronization interleaving mechanism', 'Please enter with Synchronization interleaving mechanism', 'Development Context/Objective of the software under testing');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('12', 'General testing characteristics', 'Input', '0.0641', 'input', 'input', '1', 'Inputs required', 'Please enter with Input', 'Expected input for a test case');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('13', 'General testing characteristics', 'Output', '0.0670', 'output', 'output', '2', 'Output/Response variable', 'Please enter with Output/Response variable', 'Expected output for a test case');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('14', 'General testing characteristics', 'Quality attribute', '0.0777', 'qualityAttribute', 'qualityAttribute', '1', 'Quality attributes', 'Please enter with Quality attribute', 'Software quality characteristic that the technique is able to evaluate');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('15', 'General testing characteristics', 'Type of study', '0.00', 'typeOfStudy', 'typeOfStudy', '1', 'Type of study', 'Please enter with Type of study', 'Type of empirical study applied to validate teh testing technique');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('16', 'Concurrent testing characteristics', 'Testing analysis', '0.0641', 'testingAnalysis', 'testingAnalysis', '1', 'Testing analysis', 'Please enter with Testing analysis', 'Type of analysis used by the technique ');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('17', 'Concurrent testing characteristics', 'Concurrent paradigm', '0.0592', 'concurrentParadigm', 'concurrentParadigm', '1', 'Concurrent paradigm for process interaction', 'Please enter with Concurrent paradigm', 'Concurrent paradigm for process interaction');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('18', 'Concurrent testing characteristics', 'Replay mechanism', '0.0602', 'replayMechanism', 'replayMechanism', '1', 'Replay mechanism', 'Please enter with Replay mechanism', 'Type of replay mechanism used to re-execute the program during the testing');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('19', 'Concurrent testing characteristics', 'Program representation', '0.00', 'programRepresentation', 'programRepresentation', '1', 'Program representation', 'Please enter with Program representation', 'The program representation that captures the relevant information to the testing');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('20', 'Concurrent testing characteristics', 'Instrumentation', '0.00', 'instrumentation', 'instrumentation', '1', 'Instrumentation', '', '');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('21', 'Concurrent testing characteristics', 'State space reduction', '0.0592', 'stateSpaceReduction', 'stateSpaceReduction', '1', 'State space reduction', 'Please enter with State space reduction', 'The technique used to treat the state explosion problem');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('22', 'Concurrent testing characteristics', 'Concurrent bugs', '0.0777', 'concurrentBugs', 'concurrentBugs', '1', 'Concurrent bugs', 'Please enter with Concurrent bugs', 'The type of concurrent bugs identified by the testing technique');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('23', 'Testing tool support', 'Tool name', '0.0670', 'toolName', 'toolName', '1', 'Tool name', 'Please enter with Tool name', 'Name of the tool if the technique presents one');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('24', 'Testing tool support', 'Cost', '0.00', 'cost', 'cost', '1', 'Cost', 'Please enter with Cost', 'The cost associated with the tool');
INSERT INTO `dbo`.`Field` (`idField`, `category`, `atribute`, `weight`, `html_id`, `html_name`, `html_row_count`, `html_label`, `html_placeholder`, `html_info`) VALUES ('25', 'Testing tool support', 'Platform', '0.00', 'platform', 'platform', '1', 'Platform that the tool operate', 'Please enter with Platform', 'The execution platform that the tool operate');

-- Technique
DROP TABLE IF EXISTS `dbo`.`Technique`; 

CREATE TABLE `dbo`.`Technique` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `year` INT NOT NULL,
  `bibtex` VARCHAR(5000) NULL,
  `link` VARCHAR(1024) NULL,
  `executionPlatform` VARCHAR(255) NULL,
  `objective` VARCHAR(255) NULL,
  `programmingLanguage` VARCHAR(255) NULL,
  `testingTechnique` VARCHAR(255) NULL,
  `testDataGeneration` VARCHAR(255) NULL,
  `testingLevel` VARCHAR(255) NULL,
  `synchronizationMechanism` VARCHAR(255) NULL,
  `input` VARCHAR(255) NULL,
  `output` VARCHAR(1024) NULL,
  `qualityAttribute` VARCHAR(255) NULL,
  `typeOfStudy` VARCHAR(255) NULL,
  `testingAnalysis` VARCHAR(255) NULL,
  `concurrentParadigm` VARCHAR(255) NULL,
  `replayMechanism` VARCHAR(255) NULL,
  `programRepresentation` VARCHAR(255) NULL,
  `instrumentation` VARCHAR(255) NULL,
  `stateSpaceReduction` VARCHAR(255) NULL,
  `concurrentBugs` VARCHAR(255) NULL,
  `toolName` VARCHAR(255) NULL,
  `cost` VARCHAR(255) NULL,
  `platform` VARCHAR(255) NULL,
  `needAproval` INT NOT NULL DEFAULT 1,
  `insertedOn` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
  `insertedBy` VARCHAR(64) NOT NULL DEFAULT 'unkonw user',

  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`id` ASC),
  UNIQUE INDEX `TITLE_UNIQUE` (`title` ASC) )

  ENGINE=InnoDB CHARACTER SET latin1;

INSERT INTO `dbo`.`Technique` (`id`, `title`, `year`, `bibtex`, `link`, `executionPlatform`, `objective`, `programmingLanguage`, `testingTechnique`, `testDataGeneration`, `testingLevel`, `synchronizationMechanism`, `input`, `output`, `qualityAttribute`, `typeOfStudy`, `testingAnalysis`, `concurrentParadigm`, `replayMechanism`, `programRepresentation`, `instrumentation`, `stateSpaceReduction`, `concurrentBugs`, `toolName`, `cost`, `platform`, `needAproval`, `insertedOn`, `insertedBy`) VALUES ('2', 'An Empirical Evaluation of the Cost and Effectiveness of Structural Testing Criteria for Concurrent Programs', '2013', '\"@inproceedings{2,\r  added-at = {2013-06-05T00:00:00.000+0200},\r  author = {Brito, Maria A. S. and do Rocio Senger de Souza, Simone and de Souza, Paulo Sergio Lopes},\r  biburl = {http://www.bibsonomy.org/bibtex/21935ffea5917ab7825789e25d985a931/dblp},\r  booktitle = {ICCS},\r  crossref = {conf/iccS/2013},\r  editor = {Alexandrov, Vassil N. and Lees, Michael and Krzhizhanovskaya, Valeria V. and Dongarra, Jack and Sloot, Peter M. A.},\r  ee = {http://dx.doi.org/10.1016/j.procs.2013.05.188},\r  interhash = {},\r  intrahash = {1935ffea5917ab7825789e25d985a931},\r  keywords = {dblp},\r  pages = {250-259},\r  publisher = {Elsevier},\r  series = {Procedia Computer Science},\r  timestamp = {2015-06-18T11:52:32.000+0200},\r  title = {An Empirical Evaluation of the Cost and Effectiveness of Structural Testing Criteria for Concurrent Programs.},\r  url = {http://dblp.uni-trier.de/db/conf/iccS/iccS2013.html#BritoSS13},\r  volume = 18,\r  year = 2013\r}\"', 'www.sciencedirect.com/science/article/pii/S1877050913003311', 'Linux', 'Process and HPC', 'C/MPI', 'Structural testing', 'Guided for testing criteria', 'unit', 'Execution trace', 'concurrent code in MPI', '\"number of test cases to cover a criterion, probability to satisfy a testing criterion using a test set adequate to another\rtesting criterion, percentage of defects detected\"', 'effectiveness, cost, strength', 'experiment', 'dynamic', 'Message passing', 'controlled execution', 'Parallel Control Flow Graph (PCFG)', 'check-point insertion', 'check point insertion', 'mutation based errors', 'ValiMPI', 'academic', 'Linux', '1', NOW(), 'admin');
INSERT INTO `dbo`.`Technique` (`id`, `title`, `year`, `bibtex`, `link`, `executionPlatform`, `objective`, `programmingLanguage`, `testingTechnique`, `testDataGeneration`, `testingLevel`, `synchronizationMechanism`, `input`, `output`, `qualityAttribute`, `typeOfStudy`, `testingAnalysis`, `concurrentParadigm`, `replayMechanism`, `programRepresentation`, `instrumentation`, `stateSpaceReduction`, `concurrentBugs`, `toolName`, `cost`, `platform`, `needAproval`, `insertedOn`, `insertedBy`) VALUES ('27', 'Empirical evaluation of a new composite approach to the coverage criteria and reachability testing of concurrent programs', '2014', '\"@article {27,\rauthor = {Souza, S. R. S. and Souza, P. S. L. and Brito, M. A. S. and Simao, A. S. and Zaluska, E. J.},\rtitle = {Empirical evaluation of a new composite approach to the coverage criteria and reachability testing of concurrent programs},\rjournal = {Software Testing, Verification and Reliability},\rvolume = {25},\rnumber = {3},\rissn = {1099-1689},\rurl = {http://dx.doi.org/10.1002/stvr.1568},\rdoi = {10.1002/stvr.1568},\rpages = {310--332},\rkeywords = {structural testing, reachability testing, concurrent programs, experimental study},\ryear = {2015},\r}\"', 'onlinelibrary.wiley.com/doi/10.1002/stvr.1568/abstract', 'Linux', 'Process and HPC', 'C/MPI', 'Structural testing', 'Guided for testing criteria', 'unit', 'Reachability testing', 'concurrent code in MPI', 'number of faults found, number of faults injected, number of SYN-sequences (or paths) executed for each approach.', 'efficiency, effectiveness', 'experiment', 'static and dynamic', 'Message passing', 'SYN-sequences', 'Parallel Control Flow Graph (PCFG)', 'instrumentation', 'feasible synchronization sequences', 'mutation based errors', 'ValiMPI', 'academic', 'Linux', '1', NOW(), 'admin');
INSERT INTO `dbo`.`Technique` (`id`, `title`, `year`, `bibtex`, `link`, `executionPlatform`, `objective`, `programmingLanguage`, `testingTechnique`, `testDataGeneration`, `testingLevel`, `synchronizationMechanism`, `input`, `output`, `qualityAttribute`, `typeOfStudy`, `testingAnalysis`, `concurrentParadigm`, `replayMechanism`, `programRepresentation`, `instrumentation`, `stateSpaceReduction`, `concurrentBugs`, `toolName`, `cost`, `platform`, `needAproval`, `insertedOn`, `insertedBy`) VALUES ('5', 'Comparative assessment of testing and model checking using program mutation.', '2007', '\"@inproceedings{5,\rAuthor = {Jeremy S. Bradbury AND James R. Cordy AND Juergen Dingel},\rBooktitle = {Proc. of the 3rd Workshop on Mutation Analysis (Mutation 2007)},\rMonth = {Sept.},\rPages = {210-219},\rTitle = {Comparative Assessment of Testing and Model Checking Using Program Mutation},\rYear = {2007}}\"', 'ieeexplore.ieee.org/document/4344126/', 'Linux', 'Multithreading', 'Java', 'Fault-based testing', 'Mutation operators', 'unit', 'synchronization events, thread schedules', 'source code in Java', 'number of faults detected', 'effectiveness', 'experiment', 'dynamic', 'Shared memory', 'deterministic replay', '', 'manual instrumentation', 'parallel randomized state-space search', 'assertion violation, deadlock', 'ExMan, Contest, JPF', 'academic', 'Linux', '1', NOW(), 'admin');
INSERT INTO `dbo`.`Technique` (`id`, `title`, `year`, `bibtex`, `link`, `executionPlatform`, `objective`, `programmingLanguage`, `testingTechnique`, `testDataGeneration`, `testingLevel`, `synchronizationMechanism`, `input`, `output`, `qualityAttribute`, `typeOfStudy`, `testingAnalysis`, `concurrentParadigm`, `replayMechanism`, `programRepresentation`, `instrumentation`, `stateSpaceReduction`, `concurrentBugs`, `toolName`, `cost`, `platform`, `needAproval`, `insertedOn`, `insertedBy`) VALUES ('10', 'Location pairs: a test coverage metric for shared-memory concurrent programs', '2012', '\"@article{10,\r  author    = {Serdar Tasiran and\r               M. Erkan Keremoglu and\r               Kivan{c{c}} Muslu},\r  title     = {Location pairs: a test coverage metric for shared-memory concurrent\r               programs},\r  journal   = {Empirical Software Engineering},\r  volume    = {17},\r  number    = {3},\r  pages     = {129--165},\r  year      = {2012},\r  url       = {http://dx.doi.org/10.1007/s10664-011-9166-8},\r  doi       = {10.1007/s10664-011-9166-8},\r  timestamp = {Fri, 24 Feb 2012 00:00:00 +0100},\r  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/ese/TasiranKM12},\r  bibsource = {dblp computer science bibliography, http://dblp.org}\r}\"', 'link.springer.com/article/10.1007/s10664-011-9166-8', 'NI', 'Multithreaading', 'Java', 'Structural testing', 'Coverage metric, Location Pair (LP)', 'NI', 'location pairs', 'java bytecode', '\"test adequacy: percentage of iterations for which a metric was successful.\r“%of passes that cover a new MP/DU/LP that also detect the bug” presents experimental results intended to show the correlation between the MP, DU and LP metrics and the atomicity violations in the buggy programs studied\r“%of passes that detect the bug that also cover a new MP/DU/LP” is intended to provide another measure of correlation between coverage metrics and concurrency errors.\"', 'effectiveness, efficiency and scalability', 'case study', 'static and dynamic', 'Shared memory', 'controlled thread schedule', 'control flow graph', 'JPF instrumentator', 'state transition coverage', 'high-level concurrency errors, atomicity violation, refinement violations, data race', 'Monitoring tool, JavaPathfinder', 'academic', '', '1', NOW(), 'admin');
INSERT INTO `dbo`.`Technique` (`id`, `title`, `year`, `bibtex`, `link`, `executionPlatform`, `objective`, `programmingLanguage`, `testingTechnique`, `testDataGeneration`, `testingLevel`, `synchronizationMechanism`, `input`, `output`, `qualityAttribute`, `typeOfStudy`, `testingAnalysis`, `concurrentParadigm`, `replayMechanism`, `programRepresentation`, `instrumentation`, `stateSpaceReduction`, `concurrentBugs`, `toolName`, `cost`, `platform`, `needAproval`, `insertedOn`, `insertedBy`) VALUES ('99', 'Applications of Model Reuse When Using Estimation of Distribution Algorithms to Test Concurrent Software', '2011', '\"@inproceedings{99, \r author = {Staunton, Jan and Clark, John A.},\r title = {Applications of Model Reuse when Using Estimation of Distribution Algorithms to Test Concurrent Software},\r booktitle = {Proceedings of the Third International Conference on Search Based Software Engineering},\r series = {SSBSE\'11},\r year = {2011},\r isbn = {978-3-642-23715-7},\r location = {Szeged, Hungary},\r pages = {97--111},\r numpages = {15},\r url = {http://dl.acm.org/citation.cfm?id=2042243.2042260},\r acmid = {2042260},\r publisher = {Springer-Verlag},\r address = {Berlin, Heidelberg},\r} \r\"', 'www.ssbse.org/2011/presentations/.../Staunton_EDA.pdf', 'NI', 'Distributed systems', 'Java', 'Model based testing', 'Search based testing', 'system', 'model reuse, estimation distributed algorithm EDA', 'system specification in LTL', 'time in finding a error', 'efficiency', 'case study', 'dynamic', 'shared memory', 'model reuse', 'state space graph, ltl model', '', 'fitness functions, heuristic mechanisms', 'deadlock, bugs inserted by the researcher', 'ECJ, HSF-SPIN', '', '', '1', NOW(), 'admin');
INSERT INTO `dbo`.`Technique` (`id`, `title`, `year`, `bibtex`, `link`, `executionPlatform`, `objective`, `programmingLanguage`, `testingTechnique`, `testDataGeneration`, `testingLevel`, `synchronizationMechanism`, `input`, `output`, `qualityAttribute`, `typeOfStudy`, `testingAnalysis`, `concurrentParadigm`, `replayMechanism`, `programRepresentation`, `instrumentation`, `stateSpaceReduction`, `concurrentBugs`, `toolName`, `cost`, `platform`, `needAproval`, `insertedOn`, `insertedBy`) VALUES ('91', 'Race Detection for Android Applications', '2015', '\"@article{91,\r author = {Maiya, Pallavi and Kanade, Aditya and Majumdar, Rupak},\r title = {Race Detection for Android Applications},\r journal = {SIGPLAN Not.},\r issue_date = {June 2014},\r volume = {49},\r number = {6},\r month = jun,\r year = {2014},\r issn = {0362-1340},\r pages = {316--325},\r numpages = {10},\r url = {http://doi.acm.org/10.1145/2666356.2594311},\r doi = {10.1145/2666356.2594311},\r acmid = {2594311},\r publisher = {ACM},\r address = {New York, NY, USA},\r keywords = {Android concurrency semantics, data races, happens-before reasoning},\r} \"', 'dl.acm.org/citation.cfm?id=2594311', 'Android', 'Android applications', 'Java', 'Fault-based testing', 'Event driven programming model', 'system', 'control flow', 'android applications', '\"number of data races reported, number of reports generated by\rDROIDRACER, number of true and false positives\"', 'performance', 'case study', 'dynamic', 'Shared memory', 'happens-before relations', 'happens-before graph', 'Droidracer instrumentation', 'android runtime enviroments to reduce false positives', 'data race', 'N', '', 'Android', '1', NOW(), 'admin');
INSERT INTO `dbo`.`Technique` (`id`, `title`, `year`, `bibtex`, `link`, `executionPlatform`, `objective`, `programmingLanguage`, `testingTechnique`, `testDataGeneration`, `testingLevel`, `synchronizationMechanism`, `input`, `output`, `qualityAttribute`, `typeOfStudy`, `testingAnalysis`, `concurrentParadigm`, `replayMechanism`, `programRepresentation`, `instrumentation`, `stateSpaceReduction`, `concurrentBugs`, `toolName`, `cost`, `platform`, `needAproval`, `insertedOn`, `insertedBy`) VALUES ('95', 'Test-Data Generation for Testing Parallel Real-Time Systems', '2013', '\"@inproceedings{95,\r  author    = {Muhammad Waqar Aziz and\r               Syed Abdul Baqi Shah},\r  title     = {Test-Data Generation for Testing Parallel Real-Time Systems},\r  booktitle = {Testing Software and Systems - 27th {IFIP} {WG} 6.1 International\r               Conference, {ICTSS} 2015, Sharjah and Dubai, United Arab Emirates,\r               November 23-25, 2015, Proceedings},\r  pages     = {211--223},\r  year      = {2015},\r  crossref  = {DBLP:conf/pts/2015},\r  url       = {http://dx.doi.org/10.1007/978-3-319-25945-1_13},\r  doi       = {10.1007/978-3-319-25945-1_13},\r  timestamp = {Mon, 09 Nov 2015 13:21:44 +0100},\r  biburl    = {http://dblp2.uni-trier.de/rec/bib/conf/pts/AzizS15},\r  bibsource = {dblp computer science bibliography, http://dblp.org}\r}\"', 'link.springer.com/chapter/10.1007/978-3-319-25945-1_13', 'Unix,Linux', 'HPC', 'C/Pthread', 'Functional testing', 'Search based testing', 'system', 'worst case execution time', 'real-time systems', 'end-to-end execution time', 'performance, scalability', 'case study', 'static', 'Shared memory', '', '', '', 'GA algorithm', 'bugs inserted by the researcher', 'N', '', 'Linux', '1', NOW(), 'admin');


